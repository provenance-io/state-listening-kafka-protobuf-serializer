buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "com.commercehub.gradle.plugin:gradle-avro-plugin:0.22.0"
        classpath "com.github.jengelman.gradle.plugins:shadow:4.0.2"
    }
}

plugins {
    id 'java-library'
    id 'idea'
    id 'application'
}

java.sourceCompatibility = JavaVersion.VERSION_11
java.targetCompatibility = JavaVersion.VERSION_11

group "io.provenance"
version "0.0.1"

repositories {
    mavenCentral()

    maven { url 'https://packages.confluent.io/maven/' }
    maven { url 'https://jitpack.io' }
}

apply plugin: "com.github.johnrengelman.shadow"

dependencies {
    // App config https://github.com/lightbend/config
    implementation 'com.typesafe:config:1.4.2'

    // Kafka
    implementation 'io.confluent:kafka-protobuf-serializer:7.0.1'

    // Protobuf
    implementation 'io.provenance:proto-java:1.8.0'
    implementation 'org.curioswitch.curiostack:protobuf-jackson:2.0.0'

    // Logging
    implementation 'ch.qos.logback:logback-classic:1.3.0-alpha14'

    // Testing
    testImplementation(platform('org.junit:junit-bom:5.8.2'))
    testImplementation 'org.junit.jupiter:junit-jupiter'
}


test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

jar {
    manifest {
        attributes(
                "Class-Path": configurations.compileClasspath.collect { it.getName() }.join(" "),
                "Main-Class": "io.provenance.statelistening.kafka.protobuf.serializer.KafkaConsumerApplication"
        )
    }
}

shadowJar {
    archiveBaseName = "state-listening-kafka-protobuf-serializer"
    archiveClassifier = ''
}

application {
    mainClassName = project.hasProperty("mainClass")
            ? project.getProperty("mainClass")
            : "io.provenance.statelistening.kafka.protobuf.serializer.KafkaConsumerApplication"
}